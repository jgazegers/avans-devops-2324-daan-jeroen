version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfiles/Dockerfile.app
    ports:
      - '3001:${APP_PORT-3001}'
    environment:
      - PORT=${APP_PORT-3001}
      - MONGO_USERNAME=${MONGO_USERNAME-username}
      - MONGO_PASSWORD=${MONGO_PASSWORD-password}
      - MONGO_ADDRESS=${MONGO_ADDRESS-mongo:27017}
    volumes:
      - './:/app:rw,cached'
    depends_on:
      - mongo

  prometheus:
    build:
      context: .
      dockerfile: ./Dockerfiles/Dockerfile.prometheus
    volumes:
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml

  alertmanager:
    build:
      context: .
      dockerfile: ./Dockerfiles/Dockerfile.alertmanager
    ports:
      - 9093:9093

  grafana:
    build:
      context: .
      dockerfile: ./Dockerfiles/Dockerfile.grafana
    ports: 
      - 3000:3000

  mongo:
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME-username}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD-password}

  mq-consumer:
    build:
      context: .
      dockerfile: ./Dockerfiles/Dockerfile.mq-consumer
    
    environment:
      - RABBITMQ_URL=${RABBITMQ_URL-amqp://rabbitmq}

    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:latest
    ports: 
      - 5672:5672

  
volumes:
  mongo_data:
  prometheus_data: